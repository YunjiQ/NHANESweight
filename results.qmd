# Results

## Longitudinal BMI Changes

In order to further know the weight health of the sample, we firstly use the BMI formula given by the CDC to calculate each person's current and previous BMI.

-   **Formula: weight (lb) / \[height (in)\]^2^ x 703**

```{r warning=FALSE, message=FALSE}
library(dplyr)

# get the bmi
whq <- read.csv("data/whq_handle_missing.csv")

whq$prev_bmi <- round((whq$previous_weight / (whq$current_height^2)) * 703, 2)
whq$curr_bmi <- round((whq$current_weight / (whq$current_height^2)) * 703, 2)

classify_bmi <- function(bmi) {
  if (bmi < 18.5) {
    return('Underweight')
  } else if (bmi >= 18.5 & bmi <= 24.99) {
    return('Healthy Weight')
  } else if (bmi >= 25 & bmi <= 29.99) {
    return('Overweight')
  } else {
    return('Obese')
  }
}

# classify the bmi level
whq$prev_bmi_level <- sapply(whq$prev_bmi, classify_bmi)
whq$curr_bmi_level <- sapply(whq$curr_bmi, classify_bmi)

whq$prev_bmi_level <- factor(whq$prev_bmi_level, 
                        levels = c('Underweight', 'Healthy Weight', 'Overweight', 'Obese'))
whq$curr_bmi_level <- factor(whq$curr_bmi_level, 
                        levels = c('Underweight', 'Healthy Weight', 'Overweight', 'Obese'))

whq$bmi_change <- as.numeric(whq$curr_bmi) - as.numeric(whq$prev_bmi)

whq$bmi_level_change <- ifelse(whq$bmi_change < 0, "lose",
                             ifelse(whq$bmi_change > 0, "gain", "maintain"))

whq$bmi_level_change <- factor(whq$bmi_level_change, 
                        levels = c('lose', 'maintain', 'gain'))

# remove outliers
whq <- whq |>
  filter(age_heaviest_weight < 100) |>
  filter(current_height < 100) |>
  filter(current_weight < 1000) |>
  filter(previous_weight < 1000)

write.csv(whq, "data/whq.csv", row.names = FALSE)
```

```{r warning=FALSE, message=FALSE}
library(ggplot2)
library(dplyr)
# nrow(whq) # 4503

```

## Scatterplot with Contour Line - Weight and Height Distribution by Gender

```{r}
# nrow(whq[whq$current_weight > 600, ]) # 39
# nrow(whq[whq$current_height > 100, ]) # 48

whq <- whq |>
  filter(current_height < 100) |>
  filter(current_weight < 600)

ggplot(whq, aes(current_height, current_weight)) +
  geom_point(alpha = 0.3) +
  geom_density_2d() +
  labs(title = "Scatterplot with Density Contour Lines",
       x = "Current Height",
       y = "Current Weight")
```

## Heatmap - Previous BMI vs. Current BMI

```{r}
ggplot(whq, aes(prev_bmi, curr_bmi)) +
  geom_bin2d(binwidth = c(5, 5)) + 
  ggtitle("Previous BMI vs. Current BMI")
```

## Alluvial - BMI Level Change

```{r}
#| warning: false
library(ggalluvial)

change <- whq |>
      group_by(prev_bmi_level, curr_bmi_level) |>
      summarise(frequency = n(), .groups = 'drop') |>
      rename("Freq" = frequency)

ggplot(change, aes(y = Freq, axis1 = prev_bmi_level, axis2 = curr_bmi_level)) +
      geom_alluvium(aes(fill = prev_bmi_level), width = 1/12) +
      geom_stratum(width = 1/12) +
      geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
      scale_x_discrete(expand = c(0.05, 0.05)) +
      scale_fill_brewer(type = "qual", palette = "RdBu", direction = -1) +
      labs(title = "BMI Level Change") +
      annotate("text", x = 1, y = 0, label = "prev_bmi_level", vjust = 1.5, hjust = 0.5) +
      annotate("text", x = 2, y = 0, label = "curr_bmi_level", vjust = 1.5, hjust = 0.5) +
      theme(axis.title.x = element_blank()) 
```

## Grouped Bar Chart - Current BMI by Age

```{r}
whq$age_group <- cut(whq$age_heaviest_weight,
                     breaks = c(10, 20, 30, 40, 50, 60, 70, 80),
                     labels = c("11-20", "21-30", "31-40", "41-50", "51-60", "61-70", "71-80"),
                     include.lowest = TRUE)

whq$curr_bmi_level <- factor(whq$curr_bmi_level, 
                        levels = c('Underweight', 'Healthy Weight', 'Overweight', 'Obese'))

ggplot(whq, aes(x = curr_bmi_level, fill = curr_bmi_level)) + 
  geom_bar() + 
  scale_fill_brewer(name = "Levels", palette = "YlOrRd") + 
  facet_grid(. ~ age_group ) +
  scale_x_discrete(name = "BMI Level") + 
  scale_y_continuous(name = "Counts") +
  ggtitle('Current BMI Level by Age') +
  theme(plot.title = element_text(hjust = 0.5, size = 14),
        axis.text.x = element_text(angle = 45, hjust = 1)) 

```

## Violin Plot - BMI Distribution by Race

```{r fig.width=12, fig.height=8}
library(ggplot2)

ggplot(whq, aes(x = curr_bmi, y = race, fill = race)) + 
  geom_violin(trim=FALSE) +
  geom_boxplot(width=0.1, fill="white") +
  labs(title="BMI Distribution among Race",x="BMI", y = "Race") +
  scale_fill_brewer(palette="Set3")
```

## Pyramid Chart - Age of the Heavist Weight Distribution by Gender

```{r warning=FALSE, message=FALSE}
# min(whq$age_heaviest_weight) # 12
# max(whq$age_heaviest_weight) # 99999
# nrow(whq[whq$age_heaviest_weight > 80, ]) # 21  

whq$age_group <- cut(whq$age_heaviest_weight,
                     breaks = c(10, 20, 30, 40, 50, 60, 70, 80),
                     labels = c("11-20", "21-30", "31-40", "41-50", "51-60", "61-70", "71-80"),
                     include.lowest = TRUE)

plot_data <- whq %>%
  group_by(age_group, gender) %>%
  summarise(count = n()) %>%
  ungroup()

plot_data$count[plot_data$gender == "female"] <- -plot_data$count[plot_data$gender == "female"]

ggplot(plot_data, aes(x = count, y = age_group, fill = gender)) +
  geom_bar(stat = "identity", position = "identity", color = "black", alpha = 0.7) +
  geom_text(aes(label = abs(count), hjust = ifelse(count < 0, 1.1, -0.1)), color = "black", size = 3) +
  labs(title = "Age Distribution by Gender",
       x = "Position",
       y = "Count") +
  scale_x_continuous(labels = abs) + 
  theme_minimal()
```

## Correlation Analysis Between Factors and BMI Change

-   Weight Loss Intentions & Behavior

    ```{r warning=FALSE}
    library(fmsb)
    library(dplyr)

    whq_intent <- sapply(subset(whq, change_intentional == TRUE & change_behavior == FALSE,
    select=eat_less:less_fat),as.logical)

    whq_behavior <- sapply(subset(whq, change_intentional == FALSE & change_behavior == TRUE,
    select=eat_less:less_fat), as.logical)
      
    whq_intent_counts <- colSums(whq_intent)
    whq_intent_df <- t(as.data.frame(whq_intent_counts))
    whq_behavior_counts <- colSums(whq_behavior)
    whq_behavior_df <- t(as.data.frame(whq_behavior_counts))
     
    whq_int_beh <- as.data.frame(rbind(rep(2000,1800) , rep(200,400), whq_intent_df, whq_behavior_df))
     
    radarchart(whq_int_beh,
               axistype = 1, 
               pcol = c("lightblue", "orange"),
               plwd = 2, 
               cglcol="grey", cglty=1, axislabcol="grey", cglwd=0.8,
               vlcex = 1 )

    legend("right",
           legend = c("Intention", "Behavior"), 
           col = c("lightblue", "orange"),
           lty = 1, lwd = 2,
           pch = c(10, 10),
           pt.cex = 1,
           cex = 0.8) 

    ```

-   Dieting and BMI

    ```{r warning=FALSE, fig.width=12, fig.height=8}
    library(grid)
    library(vcd)
    library(RColorBrewer)

    # mosaic plot
    dieting_sub_df <- whq |>
      group_by(bmi_level_change, eat_less, skip_meal, low_cal) |>
      summarise(frequency = n(), .groups = 'drop') |>
      rename("Freq" = frequency)

    mosaic(bmi_level_change ~ eat_less + skip_meal + low_cal, dieting_sub_df , direction = c("v", "v", "h", "h"),
           highlighting_fill= rev(brewer.pal(3, "RdBu")),
           rot_labels = 0,
           margins = c(5, 10, 10, 10),
           main = "Mosaic plot for Dieting and BMI")

    ```

-   Dietary Preferences

    ```{r warning=FALSE, fig.width=10}
    library(ggalluvial)

    preference_sub_df <- whq |>
      group_by(bmi_level_change, more_vege, less_sugar, fewer_carb, less_fat) |>
      summarise(frequency = n(), .groups = 'drop') |>
      rename("Freq" = frequency)

    ggplot(preference_sub_df, aes(y = Freq, axis1 = more_vege, axis2 = less_sugar, axis3 = fewer_carb, axis4 = less_fat)) +
      geom_alluvium(aes(fill = bmi_level_change), width = 1/12) +
      geom_stratum(width = 1/12) +
      geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
      scale_x_discrete(expand = c(0.05, 0.05)) +
      scale_fill_brewer(type = "qual", palette = "RdBu", direction = -1) +
      labs(title = "Alluvium Plot for Dietary Preferences and BMI Change") +
      annotate("text", x = 1, y = 0, label = "More Vegetables", vjust = 1.5, hjust = 0.5) +
      annotate("text", x = 2, y = 0, label = "Less Sugar", vjust = 1.5, hjust = 0.5) +
      annotate("text", x = 3, y = 0, label = "Fewer Carbs", vjust = 1.5, hjust = 0.5) +
      annotate("text", x = 4, y = 0, label = "Less Fat", vjust = 1.5, hjust = 0.5) +
      theme(axis.title.x = element_blank()) 
    ```

```{r warning=FALSE, fig.width=8, fig.height=8}
library(tidyverse)
library(dplyr)


whq_dietary <- preference_sub_df

empty_bar <- 4
to_add <- data.frame( matrix(NA, empty_bar*nlevels(whq_dietary$bmi_level_change), ncol(whq_dietary)) )
colnames(to_add) <- colnames(whq_dietary)
to_add$bmi_level_change <- rep(levels(whq_dietary$bmi_level_change), each=empty_bar)
whq_dietary <- rbind(whq_dietary, to_add)
whq_dietary <- whq_dietary |> arrange(bmi_level_change)
whq_dietary$id <- seq(1, nrow(whq_dietary))

# Get the name and the y position of each label
label_data <- whq_dietary
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust <- ifelse( angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle+180, angle)
 
base_data <- whq_dietary |>
  group_by(bmi_level_change) |>
  summarize(start=min(id), end=max(id) - empty_bar) |>
  rowwise() |>
  mutate(title=mean(c(start, end)))

# prepare a data frame for grid (scales)
grid_data <- base_data
grid_data$end <- grid_data$end[ c( nrow(grid_data), 1:nrow(grid_data)-1)] + 1
grid_data$start <- grid_data$start - 1
grid_data <- grid_data[-1,]

# Make the plot
p <- ggplot(whq_dietary, aes(x=as.factor(id), y=Freq, fill=bmi_level_change)) + 
  
  geom_bar(aes(x=as.factor(id), y=Freq, fill=bmi_level_change), stat="identity", alpha=0.5) +
  
  # Add a val=100/75/50/25 lines. I do it at the beginning to make sur barplots are OVER it.
  geom_segment(data=grid_data, aes(x = end, y = 300, xend = start, yend = 300), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
  geom_segment(data=grid_data, aes(x = end, y = 200, xend = start, yend = 200), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
  geom_segment(data=grid_data, aes(x = end, y = 100, xend = start, yend = 100), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
  geom_segment(data=grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
  
  # Add text showing the value of each 100/75/50/25 lines
  annotate("text", rep(max(whq_dietary$id),4), y = c(0, 100,200, 300), label = c("50", "150", "250", "350"), color="grey", size=2 , angle=0, fontface="bold", hjust=1) +
  
  geom_bar(aes(x=as.factor(id), y=Freq, fill=bmi_level_change), stat="identity", alpha=0.5) +
  ylim(-50,250) +
  theme_minimal() +
  theme(
    legend.position = "none",
    axis.text = element_blank(),
    axis.title = element_blank(),
    panel.grid = element_blank(),
    plot.margin = unit(rep(-1,4), "cm") 
  ) +
  coord_polar() + 
  geom_text(data=label_data, aes(x=id, y=Freq+10, label=id), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE ) +
  
  # Add base line information
  geom_segment(data=base_data, aes(x = start, y = -5, xend = end, yend = -5), colour = "black", alpha=0.8, size=0.6 , inherit.aes = FALSE )  +
  geom_text(data=base_data, aes(x = title, y = -18, label=bmi_level_change), colour = "black", alpha=0.8, size=4, fontface="bold", inherit.aes = FALSE)
 
p
```
